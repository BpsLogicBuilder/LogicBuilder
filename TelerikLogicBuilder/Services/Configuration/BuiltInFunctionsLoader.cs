using ABIS.LogicBuilder.FlowBuilder.Constants;
using ABIS.LogicBuilder.FlowBuilder.Enums;
using ABIS.LogicBuilder.FlowBuilder.ServiceInterfaces;
using ABIS.LogicBuilder.FlowBuilder.ServiceInterfaces.Configuration;
using System;
using System.Text;
using System.Xml;

namespace ABIS.LogicBuilder.FlowBuilder.Services.Configuration
{
    internal class BuiltInFunctionsLoader : IBuiltInFunctionsLoader
    {
        private readonly IXmlDocumentHelpers _xmlDocumentHelpers;

        public BuiltInFunctionsLoader(IXmlDocumentHelpers xmlDocumentHelpers)
        {
            _xmlDocumentHelpers = xmlDocumentHelpers;
        }

        public XmlDocument Load()
        {
            StringBuilder stringBuilder = new();
            using XmlWriter xmlTextWriter = this._xmlDocumentHelpers.CreateFormattedXmlWriter(stringBuilder);

            xmlTextWriter.WriteStartElement(XmlDataConstants.FORMELEMENT);
            xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, XmlDataConstants.BUILTINFUNCTIONSFORMROOTNODENAME);
                xmlTextWriter.WriteStartElement(XmlDataConstants.FOLDERELEMENT);
                xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, XmlDataConstants.BUILTINFUNCTIONSROOTFOLDERNAMEATTRIBUTE);

                    xmlTextWriter.WriteStartElement(XmlDataConstants.FUNCTIONELEMENT);
                    xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInFunctionNameEquals);
                    xmlTextWriter.WriteElementString(XmlDataConstants.MEMBERNAMEELEMENT, "ValueEquality");
                    xmlTextWriter.WriteElementString(XmlDataConstants.FUNCTIONCATEGORYELEMENT, Enum.GetName(typeof(FunctionCategories), FunctionCategories.BinaryOperator));
                    xmlTextWriter.WriteElementString(XmlDataConstants.TYPENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCEDEFINITIONELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.CASTREFERENCEASELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCECATEGORYELEMENT, Enum.GetName(typeof(ReferenceCategories), ReferenceCategories.None));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSLAYOUTELEMENT, Enum.GetName(typeof(ParametersLayout), ParametersLayout.Binary));
                    xmlTextWriter.WriteStartElement(XmlDataConstants.PARAMETERSELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue1);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Any));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue2);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Any));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTSELEMENT, string.Empty);
                    xmlTextWriter.WriteStartElement(XmlDataConstants.RETURNTYPEELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALELEMENT);
                            xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralFunctionReturnType), LiteralFunctionReturnType.Boolean));
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.SUMMARYELEMENT, "NA");
                    xmlTextWriter.WriteEndElement();

                    xmlTextWriter.WriteStartElement(XmlDataConstants.FUNCTIONELEMENT);
                    xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInFunctionNameGreaterThan);
                    xmlTextWriter.WriteElementString(XmlDataConstants.MEMBERNAMEELEMENT, "GreaterThan");
                    xmlTextWriter.WriteElementString(XmlDataConstants.FUNCTIONCATEGORYELEMENT, Enum.GetName(typeof(FunctionCategories), FunctionCategories.BinaryOperator));
                    xmlTextWriter.WriteElementString(XmlDataConstants.TYPENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCEDEFINITIONELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.CASTREFERENCEASELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCECATEGORYELEMENT, Enum.GetName(typeof(ReferenceCategories), ReferenceCategories.None));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSLAYOUTELEMENT, Enum.GetName(typeof(ParametersLayout), ParametersLayout.Binary));
                    xmlTextWriter.WriteStartElement(XmlDataConstants.PARAMETERSELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue1);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Any));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue2);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Any));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTSELEMENT, string.Empty);
                    xmlTextWriter.WriteStartElement(XmlDataConstants.RETURNTYPEELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALELEMENT);
                            xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralFunctionReturnType), LiteralFunctionReturnType.Boolean));
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.SUMMARYELEMENT, "NA");
                    xmlTextWriter.WriteEndElement();
            
                    xmlTextWriter.WriteStartElement(XmlDataConstants.FUNCTIONELEMENT);
                    xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInFunctionNameGreaterThanOrEquals);
                    xmlTextWriter.WriteElementString(XmlDataConstants.MEMBERNAMEELEMENT, "GreaterThanOrEqual");
                    xmlTextWriter.WriteElementString(XmlDataConstants.FUNCTIONCATEGORYELEMENT, Enum.GetName(typeof(FunctionCategories), FunctionCategories.BinaryOperator));
                    xmlTextWriter.WriteElementString(XmlDataConstants.TYPENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCEDEFINITIONELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.CASTREFERENCEASELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCECATEGORYELEMENT, Enum.GetName(typeof(ReferenceCategories), ReferenceCategories.None));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSLAYOUTELEMENT, Enum.GetName(typeof(ParametersLayout), ParametersLayout.Binary));
                    xmlTextWriter.WriteStartElement(XmlDataConstants.PARAMETERSELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue1);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Any));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue2);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Any));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTSELEMENT, string.Empty);
                    xmlTextWriter.WriteStartElement(XmlDataConstants.RETURNTYPEELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALELEMENT);
                            xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralFunctionReturnType), LiteralFunctionReturnType.Boolean));
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.SUMMARYELEMENT, "NA");
                    xmlTextWriter.WriteEndElement();

                    xmlTextWriter.WriteStartElement(XmlDataConstants.FUNCTIONELEMENT);
                    xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInFunctionNameLessThan);
                    xmlTextWriter.WriteElementString(XmlDataConstants.MEMBERNAMEELEMENT, "LessThan");
                    xmlTextWriter.WriteElementString(XmlDataConstants.FUNCTIONCATEGORYELEMENT, Enum.GetName(typeof(FunctionCategories), FunctionCategories.BinaryOperator));
                    xmlTextWriter.WriteElementString(XmlDataConstants.TYPENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCEDEFINITIONELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.CASTREFERENCEASELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCECATEGORYELEMENT, Enum.GetName(typeof(ReferenceCategories), ReferenceCategories.None));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSLAYOUTELEMENT, Enum.GetName(typeof(ParametersLayout), ParametersLayout.Binary));
                    xmlTextWriter.WriteStartElement(XmlDataConstants.PARAMETERSELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue1);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Any));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue2);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Any));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTSELEMENT, string.Empty);
                    xmlTextWriter.WriteStartElement(XmlDataConstants.RETURNTYPEELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALELEMENT);
                            xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralFunctionReturnType), LiteralFunctionReturnType.Boolean));
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.SUMMARYELEMENT, "NA");
                    xmlTextWriter.WriteEndElement();

                    xmlTextWriter.WriteStartElement(XmlDataConstants.FUNCTIONELEMENT);
                    xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInFunctionNameLessThanOrEquals);
                    xmlTextWriter.WriteElementString(XmlDataConstants.MEMBERNAMEELEMENT, "LessThanOrEqual");
                    xmlTextWriter.WriteElementString(XmlDataConstants.FUNCTIONCATEGORYELEMENT, Enum.GetName(typeof(FunctionCategories), FunctionCategories.BinaryOperator));
                    xmlTextWriter.WriteElementString(XmlDataConstants.TYPENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCEDEFINITIONELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.CASTREFERENCEASELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCECATEGORYELEMENT, Enum.GetName(typeof(ReferenceCategories), ReferenceCategories.None));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSLAYOUTELEMENT, Enum.GetName(typeof(ParametersLayout), ParametersLayout.Binary));
                    xmlTextWriter.WriteStartElement(XmlDataConstants.PARAMETERSELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue1);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Any));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue2);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Any));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTSELEMENT, string.Empty);
                    xmlTextWriter.WriteStartElement(XmlDataConstants.RETURNTYPEELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALELEMENT);
                            xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralFunctionReturnType), LiteralFunctionReturnType.Boolean));
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.SUMMARYELEMENT, "NA");
                    xmlTextWriter.WriteEndElement();

                    xmlTextWriter.WriteStartElement(XmlDataConstants.FUNCTIONELEMENT);
                    xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInFunctionNameAnd);
                    xmlTextWriter.WriteElementString(XmlDataConstants.MEMBERNAMEELEMENT, "BooleanAnd");
                    xmlTextWriter.WriteElementString(XmlDataConstants.FUNCTIONCATEGORYELEMENT, Enum.GetName(typeof(FunctionCategories), FunctionCategories.BinaryOperator));
                    xmlTextWriter.WriteElementString(XmlDataConstants.TYPENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCEDEFINITIONELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.CASTREFERENCEASELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCECATEGORYELEMENT, Enum.GetName(typeof(ReferenceCategories), ReferenceCategories.None));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSLAYOUTELEMENT, Enum.GetName(typeof(ParametersLayout), ParametersLayout.Binary));
                    xmlTextWriter.WriteStartElement(XmlDataConstants.PARAMETERSELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue1);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Boolean));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue2);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Boolean));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTSELEMENT, string.Empty);
                    xmlTextWriter.WriteStartElement(XmlDataConstants.RETURNTYPEELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALELEMENT);
                            xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralFunctionReturnType), LiteralFunctionReturnType.Boolean));
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.SUMMARYELEMENT, "NA");
                    xmlTextWriter.WriteEndElement();

                    xmlTextWriter.WriteStartElement(XmlDataConstants.FUNCTIONELEMENT);
                    xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInFunctionNameOr);
                    xmlTextWriter.WriteElementString(XmlDataConstants.MEMBERNAMEELEMENT, "BooleanOr");
                    xmlTextWriter.WriteElementString(XmlDataConstants.FUNCTIONCATEGORYELEMENT, Enum.GetName(typeof(FunctionCategories), FunctionCategories.BinaryOperator));
                    xmlTextWriter.WriteElementString(XmlDataConstants.TYPENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCEDEFINITIONELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.CASTREFERENCEASELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCECATEGORYELEMENT, Enum.GetName(typeof(ReferenceCategories), ReferenceCategories.None));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSLAYOUTELEMENT, Enum.GetName(typeof(ParametersLayout), ParametersLayout.Binary));
                    xmlTextWriter.WriteStartElement(XmlDataConstants.PARAMETERSELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue1);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Boolean));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameValue2);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.Boolean));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTSELEMENT, string.Empty);
                    xmlTextWriter.WriteStartElement(XmlDataConstants.RETURNTYPEELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALELEMENT);
                            xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralFunctionReturnType), LiteralFunctionReturnType.Boolean));
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.SUMMARYELEMENT, "NA");
                    xmlTextWriter.WriteEndElement();

                    xmlTextWriter.WriteStartElement(XmlDataConstants.FUNCTIONELEMENT);
                    xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInFunctionNameSetDecision);
                    xmlTextWriter.WriteElementString(XmlDataConstants.MEMBERNAMEELEMENT, "assert");
                    xmlTextWriter.WriteElementString(XmlDataConstants.FUNCTIONCATEGORYELEMENT, Enum.GetName(typeof(FunctionCategories), FunctionCategories.Assert));
                    xmlTextWriter.WriteElementString(XmlDataConstants.TYPENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCEDEFINITIONELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.CASTREFERENCEASELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCECATEGORYELEMENT, Enum.GetName(typeof(ReferenceCategories), ReferenceCategories.None));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSLAYOUTELEMENT, Enum.GetName(typeof(ParametersLayout), ParametersLayout.Sequential));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTSELEMENT, string.Empty);
                    xmlTextWriter.WriteStartElement(XmlDataConstants.RETURNTYPEELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALELEMENT);
                            xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralFunctionReturnType), LiteralFunctionReturnType.Void));
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.SUMMARYELEMENT, "NA");
                    xmlTextWriter.WriteEndElement();

                    xmlTextWriter.WriteStartElement(XmlDataConstants.FUNCTIONELEMENT);
                    xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInFunctionNameRemoveDecision);
                    xmlTextWriter.WriteElementString(XmlDataConstants.MEMBERNAMEELEMENT, "retract");
                    xmlTextWriter.WriteElementString(XmlDataConstants.FUNCTIONCATEGORYELEMENT, Enum.GetName(typeof(FunctionCategories), FunctionCategories.Retract));
                    xmlTextWriter.WriteElementString(XmlDataConstants.TYPENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCEDEFINITIONELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.CASTREFERENCEASELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCECATEGORYELEMENT, Enum.GetName(typeof(ReferenceCategories), ReferenceCategories.None));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSLAYOUTELEMENT, Enum.GetName(typeof(ParametersLayout), ParametersLayout.Sequential));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTSELEMENT, string.Empty);
                    xmlTextWriter.WriteStartElement(XmlDataConstants.RETURNTYPEELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALELEMENT);
                            xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralFunctionReturnType), LiteralFunctionReturnType.Void));
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.SUMMARYELEMENT, "NA");
                    xmlTextWriter.WriteEndElement();

                    xmlTextWriter.WriteStartElement(XmlDataConstants.FUNCTIONELEMENT);
                    xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInFunctionNameChainingUpdate);
                    xmlTextWriter.WriteElementString(XmlDataConstants.MEMBERNAMEELEMENT, "Update");
                    xmlTextWriter.WriteElementString(XmlDataConstants.FUNCTIONCATEGORYELEMENT, Enum.GetName(typeof(FunctionCategories), FunctionCategories.RuleChainingUpdate));
                    xmlTextWriter.WriteElementString(XmlDataConstants.TYPENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCENAMEELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCEDEFINITIONELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.CASTREFERENCEASELEMENT, string.Empty);
                    xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCECATEGORYELEMENT, Enum.GetName(typeof(ReferenceCategories), ReferenceCategories.None));
                    xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSLAYOUTELEMENT, Enum.GetName(typeof(ParametersLayout), ParametersLayout.Sequential));
                    xmlTextWriter.WriteStartElement(XmlDataConstants.PARAMETERSELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALPARAMETERELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, Strings.builtInParameterNameVariable);
                        xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralParameterType), LiteralParameterType.String));
                        xmlTextWriter.WriteElementString(XmlDataConstants.CONTROLELEMENT, Enum.GetName(typeof(LiteralParameterInputStyle), LiteralParameterInputStyle.SingleLineTextBox));
                        xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFOREQUALITYELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORHASHCODEELEMENT, "false");
                        xmlTextWriter.WriteElementString(XmlDataConstants.USEFORTOSTRINGELEMENT, "true");
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.PROPERTYSOURCEPARAMETERELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DEFAULTVALUEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.DOMAINELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTSELEMENT, string.Empty);
                    xmlTextWriter.WriteStartElement(XmlDataConstants.RETURNTYPEELEMENT);
                        xmlTextWriter.WriteStartElement(XmlDataConstants.LITERALELEMENT);
                            xmlTextWriter.WriteElementString(XmlDataConstants.LITERALTYPEELEMENT, Enum.GetName(typeof(LiteralFunctionReturnType), LiteralFunctionReturnType.Void));
                        xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteEndElement();
                    xmlTextWriter.WriteElementString(XmlDataConstants.SUMMARYELEMENT, "NA");
                    xmlTextWriter.WriteEndElement();

                    xmlTextWriter.WriteStartElement(XmlDataConstants.FUNCTIONELEMENT);
                        xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, "Cast");
                        xmlTextWriter.WriteElementString(XmlDataConstants.MEMBERNAMEELEMENT, "Cast");
                        xmlTextWriter.WriteElementString(XmlDataConstants.FUNCTIONCATEGORYELEMENT, Enum.GetName(typeof(FunctionCategories), FunctionCategories.Cast));
                        xmlTextWriter.WriteElementString(XmlDataConstants.TYPENAMEELEMENT, "ABIS.LogicBuilder.FlowBuilder.Caster`2");
                        xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCENAMEELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCEDEFINITIONELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.CASTREFERENCEASELEMENT, string.Empty);
                        xmlTextWriter.WriteElementString(XmlDataConstants.REFERENCECATEGORYELEMENT, Enum.GetName(typeof(ReferenceCategories), ReferenceCategories.Type));
                        xmlTextWriter.WriteElementString(XmlDataConstants.PARAMETERSLAYOUTELEMENT, Enum.GetName(typeof(ParametersLayout), ParametersLayout.Sequential));
                        xmlTextWriter.WriteStartElement(XmlDataConstants.PARAMETERSELEMENT);
                            xmlTextWriter.WriteStartElement(XmlDataConstants.GENERICPARAMETERELEMENT);
                            xmlTextWriter.WriteAttributeString(XmlDataConstants.NAMEATTRIBUTE, "From");
                            xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTNAMEELEMENT, "From");
                            xmlTextWriter.WriteElementString(XmlDataConstants.OPTIONALELEMENT, "false");
                            xmlTextWriter.WriteElementString(XmlDataConstants.COMMENTSELEMENT, string.Empty);
                            xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteStartElement(XmlDataConstants.GENERICARGUMENTSELEMENT);
                            xmlTextWriter.WriteElementString(XmlDataConstants.ITEMELEMENT, "From");
                            xmlTextWriter.WriteElementString(XmlDataConstants.ITEMELEMENT, "To");
                        xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteStartElement(XmlDataConstants.RETURNTYPEELEMENT);
                            xmlTextWriter.WriteStartElement(XmlDataConstants.GENERICELEMENT);
                                xmlTextWriter.WriteElementString(XmlDataConstants.GENERICARGUMENTNAMEELEMENT, "To");
                            xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteEndElement();
                        xmlTextWriter.WriteElementString(XmlDataConstants.SUMMARYELEMENT, "NA");
                    xmlTextWriter.WriteEndElement();

                xmlTextWriter.WriteEndElement();
            xmlTextWriter.WriteEndElement();

            xmlTextWriter.Flush();
            xmlTextWriter.Close();

            return _xmlDocumentHelpers.ToXmlDocument(stringBuilder.ToString());
        }
    }
}
