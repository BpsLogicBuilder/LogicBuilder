<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="applicationNameLogicBuilder" xml:space="preserve">
    <value>BPS Logic BuilderFR</value>
  </data>
	<data name="applicationNameFormat" xml:space="preserve">
    <value>App{0}FR</value>
    <comment>0=Count</comment>
  </data>
	<data name="assemblyUnavailableMessageFormat" xml:space="preserve">
    <value>The assembly "{0}", one of its dependencies or the class "{1}" could not be loaded.FR</value>
    <comment>0=assemblyFullPath; 1=FullyQulifiedClassName</comment>
  </data>
	<data name="cannotLoadAssemblyFormat" xml:space="preserve">
    <value>Assembly "{0}" could not be loaded.FR</value>
    <comment>0=Assembly</comment>
  </data>
	<data name="cannotLoadClassFormat" xml:space="preserve">
    <value>Class "{0}" could not be loaded.</value>
    <comment>0=ActivityClass</comment>
  </data>
	<data name="constructorToStringFormat" xml:space="preserve">
    <value>{0} - {1}({2})FR</value>
    <comment>0=constructorName 1=Type 2=parametersToString</comment>
  </data>
	<data name="createNewProjectFileQuestion" xml:space="preserve">
    <value>Create a new Project File?FR</value>
  </data>
	<data name="defaultActivityAssemblyFolder" xml:space="preserve">
    <value>ActivityAssemblyFR</value>
  </data>
	<data name="defaultActivityClass" xml:space="preserve">
    <value>ActivityNamespace.ActivityClassFR</value>
  </data>
	<data name="defaultDeleteRulesUrl" xml:space="preserve">
    <value>http://localhost:3677/api/transfer/DeleteRules</value>
  </data>
	<data name="defaultDeleteAllRulesUrl" xml:space="preserve">
    <value>http://localhost:3677/api/transfer/DeleteAllRules</value>
  </data>
	<data name="defaultErrorMessage" xml:space="preserve">
    <value>An error has occurred.FR</value>
  </data>
	<data name="defaultPostFileDataUrl" xml:space="preserve">
    <value>http://localhost:3677/api/transfer/PostFileData</value>
  </data>
	<data name="defaultPostVariableMetaDataUrl" xml:space="preserve">
    <value>http://localhost:3677/api/transfer/PostVariableMetaData</value>
  </data>
	<data name="defaultResourcesFile" xml:space="preserve">
    <value>strings.resourcesFR</value>
  </data>
	<data name="defaultResourcesFolder" xml:space="preserve">
    <value>ResourcesFR</value>
  </data>
	<data name="defaultRulesFile" xml:space="preserve">
    <value>expert.rulesFR</value>
  </data>
	<data name="defaultRulesFolder" xml:space="preserve">
    <value>RulesFR</value>
  </data>
	<data name="dotExe" xml:space="preserve">
    <value>.exe</value>
  </data>
  <data name="enumDescriptionAny" xml:space="preserve">
    <value>AnyFR</value>
  </data>
  <data name="enumDescriptionBoolean" xml:space="preserve">
    <value>BooleanFR</value>
  </data>
  <data name="enumDescriptionDateTime" xml:space="preserve">
    <value>DateTimeFR</value>
  </data>
	<data name="enumDescriptionDateTimeOffset" xml:space="preserve">
    <value>DateTimeOffsetFR</value>
  </data>
	<data name="enumDescriptionDate" xml:space="preserve">
    <value>DateTimeFR</value>
  </data>
  <data name="enumDescriptionTimeSpan" xml:space="preserve">
    <value>TimeSpanFR</value>
  </data>
	<data name="enumDescriptionTimeOfDay" xml:space="preserve">
    <value>TimeOfDayFR</value>
  </data>
  <data name="enumDescriptionLong" xml:space="preserve">
    <value>LongFR</value>
  </data>
  <data name="enumDescriptionByte" xml:space="preserve">
    <value>ByteFR</value>
  </data>
  <data name="enumDescriptionChar" xml:space="preserve">
    <value>CharFR</value>
  </data>
  <data name="enumDescriptionDouble" xml:space="preserve">
    <value>DoubleFR</value>
  </data>
  <data name="enumDescriptionFloat" xml:space="preserve">
    <value>FloatFR</value>
  </data>
  <data name="enumDescriptionShort" xml:space="preserve">
    <value>ShortFR</value>
  </data>
  <data name="enumDescriptionSByte" xml:space="preserve">
    <value>Signed ByteFR</value>
  </data>
  <data name="enumDescriptionString" xml:space="preserve">
    <value>StringFR</value>
  </data>
  <data name="enumDescriptionUInteger" xml:space="preserve">
    <value>Unsigned IntegerFR</value>
  </data>
  <data name="enumDescriptionULong" xml:space="preserve">
    <value>Unsigned LongFR</value>
  </data>
  <data name="enumDescriptionUShort" xml:space="preserve">
    <value>Unsigned ShortFR</value>
  </data>
  <data name="enumDescriptionGuid" xml:space="preserve">
    <value>GuidFR</value>
  </data>
  <data name="enumDescriptionDecimal" xml:space="preserve">
    <value>DecimalFR</value>
  </data>
  <data name="enumDescriptionInteger" xml:space="preserve">
    <value>IntegerFR</value>
  </data>
  <data name="enumDescriptionNullableDecimal" xml:space="preserve">
    <value>Nullable DecimalFR</value>
  </data>
  <data name="enumDescriptionNullableInteger" xml:space="preserve">
    <value>Nullable IntegerFR</value>
  </data>
  <data name="enumDescriptionNullableBoolean" xml:space="preserve">
    <value>Nullable BooleanFR</value>
  </data>
  <data name="enumDescriptionNullableDateTime" xml:space="preserve">
    <value>Nullable DateTimeFR</value>
  </data>
	<data name="enumDescriptionNullableDateTimeOffset" xml:space="preserve">
    <value>Nullable DateTimeOffsetFR</value>
  </data>
	<data name="enumDescriptionNullableDate" xml:space="preserve">
    <value>Nullable DateFR</value>
  </data>
  <data name="enumDescriptionNullableTimeSpan" xml:space="preserve">
    <value>Nullable TimeSpanFR</value>
  </data>
	<data name="enumDescriptionNullableTimeOfDay" xml:space="preserve">
    <value>Nullable TimeOfDayFR</value>
  </data>
  <data name="enumDescriptionNullableGuid" xml:space="preserve">
    <value>Nullable GuidFR</value>
  </data>
  <data name="enumDescriptionNullableByte" xml:space="preserve">
    <value>Nullable ByteFR</value>
  </data>
  <data name="enumDescriptionNullableShort" xml:space="preserve">
    <value>Nullable ShortFR</value>
  </data>
  <data name="enumDescriptionNullableLong" xml:space="preserve">
    <value>Nullable LongFR</value>
  </data>
  <data name="enumDescriptionNullableFloat" xml:space="preserve">
    <value>Nullable FloatFR</value>
  </data>
  <data name="enumDescriptionNullableDouble" xml:space="preserve">
    <value>Nullable DoubleFR</value>
  </data>
  <data name="enumDescriptionNullableChar" xml:space="preserve">
    <value>Nullable CharFR</value>
  </data>
  <data name="enumDescriptionNullableSByte" xml:space="preserve">
    <value>Nullable SByteFR</value>
  </data>
  <data name="enumDescriptionNullableUShort" xml:space="preserve">
    <value>Nullable UShortFR</value>
  </data>
  <data name="enumDescriptionNullableUInteger" xml:space="preserve">
    <value>Nullable UIntegerFR</value>
  </data>
  <data name="enumDescriptionNullableULong" xml:space="preserve">
    <value>Nullable ULongFR</value>
  </data>
	<data name="enumDescriptionArray" xml:space="preserve">
    <value>ArrayFR</value>
  </data>
	<data name="enumDescriptionGenericList" xml:space="preserve">
    <value>Generic ListFR</value>
  </data>
	<data name="enumDescriptionGenericCollection" xml:space="preserve">
    <value>Generic CollectionFR</value>
  </data>
	<data name="enumDescriptionIGenericList" xml:space="preserve">
    <value>Generic List InterfaceFR</value>
  </data>
	<data name="enumDescriptionIGenericCollection" xml:space="preserve">
    <value>Generic Collection InterfaceFR</value>
  </data>
	<data name="enumDescriptionIGenericEnumerable" xml:space="preserve">
    <value>Generic Enumerable InterfaceFR</value>
  </data>
  <data name="invalidArgumentTextFormat" xml:space="preserve">
    <value>Invalid Argument {0}.FR</value>
  </data>
	<data name="invalidConfigurationDocumentFormat" xml:space="preserve">
    <value>{0} has invalid data.FR</value>
    <comment>{0}=fileFullName</comment>
  </data>
	<data name="listParameterTypeNameFormat" xml:space="preserve">
    <value>{0}Of{1}: {2}FR</value>
    <comment>0=listType 1=UnderlyingType 2=name</comment>
  </data>
	<data name="listDescriptionFormat" xml:space="preserve">
    <value>{0} Of {1}FR</value>
    <comment>0=listType 1=UnderlyingType</comment>
  </data>
  <data name="notImplementedMessageFormat" xml:space="preserve">
    <value>Method not implemented in {0}.FR</value>
  </data>
  <data name="parameterTypeNameFormat2" xml:space="preserve">
    <value>{0}: {1}FR</value>
    <comment>0=type 1=name</comment>
  </data>
  <data name="spaceString" xml:space="preserve">
    <value>&#32;</value>
  </data>
	<data name="truncatedMessageTextFormat" xml:space="preserve">
    <value>{0} ...FR</value>
    <comment>0=truncated message</comment>
  </data>
  <data name="underscore" xml:space="preserve">
    <value>_</value>
  </data>
	<data name="unhandledEventLoggerExceptionFormat" xml:space="preserve">
    <value>The event logger has generated an unhandled exception of type: "{0}". Message: "{1}".FR</value>
  </data>
</root>